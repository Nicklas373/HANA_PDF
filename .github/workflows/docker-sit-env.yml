name: HANA PDF Container [SIT]

on:
  push:
    branches:
      - dev/master-live

jobs:
  pdf_build_image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cleanup Unused Docker Images
        run: docker rmi $(docker images -q) || true

      - name: Build PDF Image
        run: |
          docker build \
            --build-arg DB_USERNAME=${{ secrets.DB_USERNAME }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg ASPOSE_CLOUD_CLIENT_ID=${{ secrets.ASPOSE_CLOUD_CLIENT_ID }} \
            --build-arg ASPOSE_CLOUD_TOKEN=${{ secrets.ASPOSE_CLOUD_TOKEN }} \
            --build-arg ADOBE_CLIENT_ID=${{ secrets.ADOBE_CLIENT_ID }} \
            --build-arg FTP_USERNAME=${{ secrets.FTP_USERNAME }} \
            --build-arg FTP_USERPASS=${{ secrets.FTP_USERPASS }} \
            --build-arg FTP_SERVER=${{ secrets.FTP_SERVER }} \
            --build-arg FTP_ROOT=/ \
            --build-arg ILOVEPDF_PUBLIC_KEY=${{ secrets.ILOVEPDF_PUBLIC_KEY }} \
            --build-arg ILOVEPDF_SECRET_KEY=${{ secrets.ILOVEPDF_SECRET_KEY }} \
            -t nicklas373/hana-docker-sit-v2-hanaci-app-pdf:1.0 \
            -f Dockerfile/Dockerfile.hana-app-pdf.sit \
            .
          mkdir -p pdf_image
          docker save -o pdf_image/pdf_image.tar nicklas373/hana-docker-sit-v2-hanaci-app-pdf:1.0

  instance_build_image:
    runs-on: ubuntu-latest
    needs: pdf_build_image

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cleanup Unused Docker Images
        run: docker rmi $(docker images -q) || true

      - name: Build Instance Image
        run: |
          docker build \
            --build-arg DB_USERNAME=${{ secrets.DB_USERNAME }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg ASPOSE_CLOUD_CLIENT_ID=${{ secrets.ASPOSE_CLOUD_CLIENT_ID }} \
            --build-arg ASPOSE_CLOUD_TOKEN=${{ secrets.ASPOSE_CLOUD_TOKEN }} \
            --build-arg ADOBE_CLIENT_ID=${{ secrets.ADOBE_CLIENT_ID }} \
            --build-arg FTP_USERNAME=${{ secrets.FTP_USERNAME }} \
            --build-arg FTP_USERPASS=${{ secrets.FTP_USERPASS }} \
            --build-arg FTP_SERVER=${{ secrets.FTP_SERVER }} \
            --build-arg FTP_ROOT=/ \
            --build-arg ILOVEPDF_PUBLIC_KEY=${{ secrets.ILOVEPDF_PUBLIC_KEY }} \
            --build-arg ILOVEPDF_SECRET_KEY=${{ secrets.ILOVEPDF_SECRET_KEY }} \
            -t nicklas373/hana-docker-sit-v2-hanaci-instance:1.0 \
            -f Dockerfile/Dockerfile.hana-instance.sit \
            .
          mkdir -p instance_image
          docker save -o instance_image/instance_image.tar nicklas373/hana-docker-sit-v2-hanaci-instance:1.0
          
  deploy_to_sit:
    needs: [pdf_build_image, instance_build_image]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cleanup Unused Docker Images
        run: docker rmi $(docker images -q) || true
        
      - name: Pull PDF Image
        uses: actions/download-artifact@v4
        with:
          name: pdf_image
          path: pdf_image

      - name: Pull Instance Image
        uses: actions/download-artifact@v4
        with:
          name: instance_image
          path: instance_image

      - name: Load Container Image
        run: |
          docker load -i pdf_image/pdf_image.tar
          docker load -i instance_image/instance_image.tar

      - name: Verify Container Image
        run: |
          if docker images | grep -q "nicklas373/hana-docker-sit-v2-hanaci-app-pdf"; then
            echo "PDF Image is already loaded."
          else
            echo "PDF Image is not loaded."
            exit 1
          fi
          
          if docker images | grep -q "nicklas373/hana-docker-sit-v2-hanaci-instance"; then
            echo "Instance Image is already loaded."
          else
            echo "Instance Image is not loaded."
            exit 1
          fi
          
      - name: Deploy Container Image to SIT
        run: |
          echo ${{ secrets.DOCKER_PAT }} | docker login -u nicklas373 --password-stdin
          docker push nicklas373/hana-docker-sit-v2-hanaci-app-pdf:1.0
          docker push nicklas373/hana-docker-sit-v2-hanaci-instance:1.0
