# Configure php fpm as base image 
FROM php:8.2-fpm

# Configure image maintainer
LABEL maintainer="Nicklas373 <herlambangdicky5@gmail.com>"
LABEL version="1.0"
LABEL description="Docker container for HANA PDF REST API"

# Configure ARG
ARG DB_USERNAME
ARG DB_PASSWORD
ARG JWT_SHOW_BLACKLIST_EXCEPTION
ARG JWT_TTL

# Configure work directory
WORKDIR /var/www/html

# Configure updates packages
RUN apt-get update && apt-get upgrade -y && apt-get upgrade dist -y && apt-get dist-upgrade -y

# Configure initial packages
RUN apt-get update && apt-get install -y \
    curl \
    unzip \
    git \
    libmagickwand-dev \
    libzip-dev \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    ghostscript

# Install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg && \
    docker-php-ext-install -j$(nproc) \
        gd \
        zip

# Install Imagick extension
RUN pecl install imagick && \
    docker-php-ext-enable imagick

# Configure PostgresSQL PHP Driver
RUN apt-get update && apt-get install -y libpq-dev && \
    docker-php-ext-install pdo_pgsql

# Clone App Services
RUN git clone -b be/master https://github.com/Nicklas373/Hana-PDF hanaci-api
RUN chown -R www-data:www-data hanaci-api

# Configure Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN cd hanaci-api && composer install --no-interaction --no-scripts --no-progress --prefer-dist

# Configure App Service
RUN mkdir hanaci-api/storage/app/public/batch
RUN mkdir hanaci-api/storage/app/public/download
RUN mkdir hanaci-api/storage/app/public/image
RUN mkdir hanaci-api/storage/app/public/pool
RUN mkdir hanaci-api/storage/app/public/upload
RUN cd hanaci-api && chmod o+w /var/www/html/hanaci-api/storage/ -R
RUN cd hanaci-api && chmod o+w /var/www/html/hanaci-api/vendor/mpdf/mpdf/tmp/ -R
RUN cd hanaci-api && cp .env.example .env
RUN cd hanaci-api && php artisan key:generate
RUN cd hanaci-api && php artisan jwt:secret
RUN cd hanaci-api && php artisan storage:link
RUN cd hanaci-api && php artisan config:cache
RUN cd hanaci-api && php artisan config:clear

# Configure Laravel Env
RUN cd hanaci-api && echo "JWT_SHOW_BLACKLIST_EXCEPTION=$JWT_SHOW_BLACKLIST_EXCEPTION" >> .env
RUN cd hanaci-api && echo "JWT_TTL=$JWT_TTL" >> .env
RUN cd hanaci-api && echo "" >> .env
RUN cd hanaci-api && sed -i 's/APP_NAME=Laravel/APP_NAME="gw.hana-ci"/' .env
RUN cd hanaci-api && sed -i "s#APP_URL=http://localhost#APP_URL=http://sit.gw.hana-ci.com#" .env
RUN cd hanaci-api && sed -i "s/DB_CONNECTION=mysql/DB_CONNECTION=pgsql/" .env
RUN cd hanaci-api && sed -i "s/DB_HOST=127.0.0.1/DB_HOST=hana-db-services/" .env
RUN cd hanaci-api && sed -i "s/DB_PORT=3306/DB_PORT=5432/" .env
RUN cd hanaci-api && sed -i "s/DB_DATABASE=laravel/DB_DATABASE=postgres/" .env
RUN cd hanaci-api && sed -i "s/DB_USERNAME=root/DB_USERNAME=$DB_USERNAME/" .env
RUN cd hanaci-api && sed -i "s/DB_PASSWORD=/DB_PASSWORD=$DB_PASSWORD/" .env
RUN cd hanaci-api && echo "" >> .env
RUN cd hanaci-api && echo "ASPOSE_CLOUD_CLIENT_ID=xxxx" >> .env
RUN cd hanaci-api && echo "ASPOSE_CLOUD_TOKEN=xxxx" >> .env
RUN cd hanaci-api && echo "FTP_USERNAME=xxxx" >> .env
RUN cd hanaci-api && echo "FTP_USERPASS=xxxx" >> .env
RUN cd hanaci-api && echo "FTP_SERVER=xxxx" >> .env
RUN cd hanaci-api && echo "FTP_ROOT=xxxx" >> .env
RUN cd hanaci-api && echo "ILOVEPDF_PUBLIC_KEY=xxxx" >> .env
RUN cd hanaci-api && echo "ILOVEPDF_SECRET_KEY=xxxx" >> .env
RUN cd hanaci-api && echo "PDF_IMG_POOL=image" >> .env
RUN cd hanaci-api && echo "PDF_BATCH=batch" >> .env
RUN cd hanaci-api && echo "PDF_UPLOAD=upload" >> .env
RUN cd hanaci-api && echo "PDF_DOWNLOAD=download" >> .env
RUN cd hanaci-api && echo "PDF_POOL=pool" >> .env
RUN cd hanaci-api && echo "TELEGRAM_BOT_ID=xxxx" >> .env
RUN cd hanaci-api && echo "TELEGRAM_CHAT_ID=xxxx" >> .env
RUN cd hanaci-api && echo "HANA_UNIQUE_KEY=xxxx" >> .env